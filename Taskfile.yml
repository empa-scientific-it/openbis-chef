version: 3

dotenv:
  - ".env"

tasks:
  start_openbis:
      cmds:
        - docker compose up -d
        - until ./utils/check_openbis.sh https://localhost:${OPENBIS_PORT}; do sleep 1; done
      status:
        - docker compose ps | grep openbis
        - ./utils/check_openbis.sh https://localhost:${OPENBIS_PORT}

  #TODO fix  this part
  #If it does not work, just download the tool from here:
  #https://gitlab.empa.ch/openbis-tools/instance-io/-/packages/57 and place it in ./utils/ of the project with the name instance-io.jar
  cleanup:
      cmds:
        - docker compose down -v
  download_jar:
      # requires:
      #vars: [TOKEN]
      dir: ./utils
      cmds:
        - 'curl  -L -H "Private-Token: {{.TOKEN}}"  https://gitlab.empa.ch/api/v4/projects/1553/packages/maven/ch/empa/openbisio/app/0.1.3/app-0.1.3.jar --output instance-io.jar'
      status:
        - test  ./utils/instance-io.jar
  export_schema:
      requires:
        vars: [OPENBIS_SOURCE_USER, OPENBIS_SOURCE_PASSWORD]
      deps:
        - download_jar
      cmds:
        - java -jar ./utils/instance-io.jar dump  ./schemas/schema_402.json https://openbis-empa-lab402.ethz.ch/ {{.OPENBIS_SOURCE_USER}} {{.OPENBIS_SOURCE_PASSWORD}}  
      status:
        - test ./schemas/schema_402.json
  cleanup_schema:
      deps:
        - export_schema
      sources:
        - ./schemas/schema_402.json
      generates:
        - ./schemas/schema_402_clean.json
      cmds:
        - cat ./schemas/schema_402.json | jq '.spaces |= map(select(.code | contains("POLPRO")))' | more > ./schemas/schema_402_clean.json
  ##TODO fix this part: improve the checking whether the schema is already imported
  import_schema:
      deps:
        - cleanup_schema
        - start_openbis
        - download_jar
      cmds:
        - until ./utils/check_openbis.sh https://localhost:${OPENBIS_PORT}; do sleep 1; done
        - java -jar ./utils/instance-io.jar load ./schemas/schema_402_clean.json https://localhost:${OPENBIS_PORT} admin changeit 
        - touch .schema_imported
      status:
        - test -f .schema_imported
  dev-install:
      dir: ./services/app
      sources:
        - ./services/app/package.json
      generates:
        - ./services/app/yarn.lock
      cmds:
        - yarn install
      status:
        -  test ./services/app/yarn.lock
      run: once
  dev:
      deps:
        - dev-install
        - import_schema
      dir: ./services/app
      cmds:
        - yarn run vite-dev
  dump_local_schema:
      deps:
        - download_jar
        - start_openbis
      cmds:
        - java -jar ./utils/instance-io.jar dump  ./schemas/schema_402_local.json https://localhost:${OPENBIS_PORT} admin {{.OPENBIS_PASSWORD}}
      status:
        - test ./schemas/schema_402_local.json
  serve:
      deps:
        - import_schema
        - start_openbis
      dir: ./services/app
      cmds:
        - docker build -t app .
        - docker stop app || true
        - docker container rm app || true
        - docker run --name app -d -p 8080:8080 app
      # sources:
      #   - ./services/app/Dockerfile
      #   - ./services/app/package.json
      #   - ./services/app/yarn.lock
      #   - ./services/app/nginx.conf
      # generates:
      #   - ./services/app/app/
  test_serve:
      deps:
        - serve
      dir: ./services/app
      cmds:
        - curl -X POST  http://localhost:8080/openbis-empa-lab207 -s -S