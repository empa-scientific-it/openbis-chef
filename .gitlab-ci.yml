stages:
  - build
  - deploy

tags:
  - openbis

build-docker:
  stage: build
  image: docker:20.10.22-dind
  services:
    - docker:dind
  tags:
    - dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:latest services/app
    - docker push $CI_REGISTRY_IMAGE
  only:
    changes:
      - services/app/**/
    refs:
      - master
deploy-docker:
  image: docker:23.0.6-dind-alpine3.18
  services:
     - docker:23.0.6-dind-alpine3.18
  variables:
    DOCKER_HOST: ssh://$DEPLOY_HOST
    GIT_STRATEGY: none
  # services:
  #   - docker:23.0.6-dind-alpine3.18
  # tags:
  #   - dind
  # before_script:
  #   - DOCKER_HOST=ssh://$DEPLOY_HOST  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  before_script:
    - echo $DEPLOY_HOST
    - echo $CI_REGISTRY_USER
    - echo $DOCKER_HOST
    - apk add openssh-client openssh
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts

    # - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - 
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE
    - docker stop app || true
    - docker rm app || true
    - docker run --name app -p 8000:80  $CI_REGISTRY_IMAGE
